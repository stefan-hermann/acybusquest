---
description: >
  Welding Robot Type 001 S7

metadata:
  name: weldingRobot01_04
  version: "0.4"

parameters:
  plcHost:
    type: string
    default: "192.168.3.139"

  plcPort:
    type: integer
    default: 1101

  organization:
    default: carfactory
    type: string

  location:
    default: plant1
    type: string

  processarea:
    default: weldingShop
    type: string

  equipment:
    default: weldingRobot01
    type: string

definitions:
  CYBUS_MQTT_ROOT: !sub '${organization}/${location}/${processarea}/${equipment}'

resources:
  s7Connection:
    type: Cybus::Connection
    properties:
      protocol: S7
      targetState: connected
      connection:
        host: !ref plcHost
        port: !ref plcPort
        rack: 0
        slot: 1
        pollInterval: 1000

  position:
    type: Cybus::Endpoint
    properties:
      protocol: S7
      connection: !ref s7Connection
      subscribe:
        address: DB1,REAL0
      topic: !sub '${Cybus::ServiceId}/position'

  weldCurrent:
    type: Cybus::Endpoint
    properties:
      protocol: S7
      connection: !ref s7Connection
      subscribe:
        address: DB1,REAL4
      topic: !sub '${Cybus::ServiceId}/weldCurrent'

  weldVoltage:
    type: Cybus::Endpoint
    properties:
      protocol: S7
      connection: !ref s7Connection
      subscribe:
        address: DB1,REAL8
      topic: !sub '${Cybus::ServiceId}/weldVoltage'

  weldSpeed:
    type: Cybus::Endpoint
    properties:
      protocol: S7
      connection: !ref s7Connection
      subscribe:
        address: DB1,DINT12
      topic: !sub '${Cybus::ServiceId}/weldSpeed'

  nozzleTemperature:
    type: Cybus::Endpoint
    properties:
      protocol: S7
      connection: !ref s7Connection
      subscribe:
        address: DB1,REAL8
      topic: !sub '${Cybus::ServiceId}/nozzleTemperature'

  normalizedMapping:                                                # Mapping resource to transform and republish data
    type: Cybus::Mapping                                            #   – Type: data transformation and mapping
    properties:                                                     #   – Configuration for mapping behavior
      mappings:                                                     #     – List of individual mapping rules
        - subscribe:                                                #       – Defines source of data
            endpoint: !ref nozzleTemperature                        #         – Use the nozzleTemperature endpoint above
          publish:                                                  #       – Defines where to republish transformed data
            topic: !sub '${CYBUS_MQTT_ROOT}/${Cybus::ServiceId}/nozzleTemperature_celsius'  
                                                                    #         – Target MQTT topic for transformed values
          rules:                                                    #       – Transformation rules to apply
            - transform:                                            #         – Defines a data transformation
                expression: |                                       #           – JavaScript-like expression for transforming payload
                  {                                                 #             – Build a new JSON object
                    "timestamp": timestamp,                         #               – Preserve original timestamp
                    "value": ($number(value) - 32) * 5 / 9,         #               – Convert Fahrenheit to Celsius
                    "unit": "Celsius"                               #               – Label the unit of the new value
                  }